security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN_USER:
            - ROLE_ADMIN_USER_LIST
            - ROLE_ADMIN_USER_SEARCH
            - ROLE_ADMIN_USER_NEW
            - ROLE_ADMIN_USER_EDIT
            - ROLE_ADMIN_USER_SHOW
            # - ROLE_ADMIN_USER_DELETE
        ROLE_ADMIN_WIDGET:
            - ROLE_ADMIN_WIDGET_LIST
            - ROLE_ADMIN_WIDGET_SEARCH
            - ROLE_ADMIN_WIDGET_NEW
            - ROLE_ADMIN_WIDGET_EDIT
            - ROLE_ADMIN_WIDGET_SHOW
            - ROLE_ADMIN_WIDGET_DELETE
        ROLE_ADMIN:
            - ROLE_ADMIN_USER
            - ROLE_ADMIN_WIDGET
        ROLE_SUPER_ADMIN:
            - ROLE_ADMIN

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            provider: fos_userbundle
            json_login:
                check_path: /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - App\Security\ApiAuthenticator
                    - lexik_jwt_authentication.jwt_token_authenticator
                entry_point: lexik_jwt_authentication.jwt_token_authenticator
            anonymous:    true

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager

            logout:       true
            anonymous:    true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/efconnect, role: ROLE_ADMIN }
        - { path: ^/elfinder, role: ROLE_ADMIN }
